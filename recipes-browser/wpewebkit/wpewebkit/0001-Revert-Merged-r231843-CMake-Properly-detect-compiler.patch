From 49ad4d84eb8d75e9280bdc8c0c8f62a075f237ba Mon Sep 17 00:00:00 2001
From: Carlos Alberto Lopez Perez <clopez@igalia.com>
Date: Sun, 20 May 2018 16:45:14 +0200
Subject: [PATCH] Revert "Merged r231843 - [CMake] Properly detect
 compiler flags, needed libs, and fallbacks for usage of 64-bit atomic
 operations"

This reverts commit 7207140d97a01ece680fe1bd7664bbcd1b9e0d8d.

It broke cross-compilation for ARMv7 with CMake 3.8.2
---
 Source/JavaScriptCore/CMakeLists.txt   | 10 ++++++++--
 Source/WebKit/CMakeLists.txt           | 18 ++++++++++++++++--
 Source/cmake/OptionsWPE.cmake          |  2 --
 Source/cmake/WebKitCompilerFlags.cmake | 13 -------------
 4 files changed, 24 insertions(+), 19 deletions(-)

diff --git a/Source/JavaScriptCore/CMakeLists.txt b/Source/JavaScriptCore/CMakeLists.txt
index 1d5a8d2d934..94036df9213 100644
--- a/Source/JavaScriptCore/CMakeLists.txt
+++ b/Source/JavaScriptCore/CMakeLists.txt
@@ -116,8 +116,14 @@ set(JavaScriptCore_LIBRARIES
     ${LLVM_LIBRARIES}
 )
 
-if (ATOMIC_INT64_REQUIRES_LIBATOMIC)
-    list(APPEND JavaScriptCore_LIBRARIES atomic)
+# Since r228149, on MIPS we need to link with -latomic, because
+# __atomic_fetch_add_8 is not available as a compiler intrinsic. It is
+# available on other platforms (including 32-bit Arm), so the link with
+# libatomic is only neede on MIPS.
+if (WTF_CPU_MIPS)
+    list(APPEND JavaScriptCore_LIBRARIES
+        -latomic
+    )
 endif ()
 
 set(JavaScriptCore_SCRIPTS_SOURCES_DIR "${JAVASCRIPTCORE_DIR}/Scripts")
diff --git a/Source/WebKit/CMakeLists.txt b/Source/WebKit/CMakeLists.txt
index 01642f52b5c..d98f3c4ba68 100644
--- a/Source/WebKit/CMakeLists.txt
+++ b/Source/WebKit/CMakeLists.txt
@@ -778,8 +778,22 @@ else ()
     set(JavaScriptCore_SCRIPTS_DIR "${FORWARDING_HEADERS_DIR}/JavaScriptCore/Scripts")
 endif ()
 
-if (ATOMIC_INT64_REQUIRES_LIBATOMIC)
-    list(APPEND WebKit_LIBRARIES PRIVATE atomic)
+if (COMPILER_IS_GCC_OR_CLANG)
+    set(ATOMIC_TEST_SOURCE
+    "
+        #include <atomic>
+        int main() { std::atomic<int64_t> i(0); i++; return 0; }
+    "
+    )
+    check_cxx_source_compiles("${ATOMIC_TEST_SOURCE}" ATOMIC_INT64_IS_BUILTIN)
+    if (NOT ATOMIC_INT64_IS_BUILTIN)
+        set(CMAKE_REQUIRED_LIBRARIES atomic)
+        check_cxx_source_compiles("${ATOMIC_TEST_SOURCE}" ATOMIC_INT64_REQUIRES_LIBATOMIC)
+        if (ATOMIC_INT64_REQUIRES_LIBATOMIC)
+            list(APPEND WebKit_LIBRARIES atomic)
+        endif ()
+        unset(CMAKE_REQUIRED_LIBRARIES)
+    endif ()
 endif ()
 
 if (UNIX)
diff --git a/Source/cmake/OptionsWPE.cmake b/Source/cmake/OptionsWPE.cmake
index e82a9d488c0..0777743cebc 100644
--- a/Source/cmake/OptionsWPE.cmake
+++ b/Source/cmake/OptionsWPE.cmake
@@ -12,8 +12,6 @@ set(LIB_INSTALL_DIR "${CMAKE_INSTALL_FULL_LIBDIR}" CACHE PATH "Absolute path to
 set(EXEC_INSTALL_DIR "${CMAKE_INSTALL_FULL_BINDIR}" CACHE PATH "Absolute path to executable installation directory")
 set(LIBEXEC_INSTALL_DIR "${CMAKE_INSTALL_FULL_LIBEXECDIR}/wpe-webkit-${WPE_API_VERSION}" CACHE PATH "Absolute path to install executables executed by the library")
 
-set(THREADS_PREFER_PTHREAD_FLAG ON)
-
 WEBKIT_OPTION_BEGIN()
 
 include(GStreamerDefinitions)
diff --git a/Source/cmake/WebKitCompilerFlags.cmake b/Source/cmake/WebKitCompilerFlags.cmake
index 8de72ecc519..cd17ddd7217 100644
--- a/Source/cmake/WebKitCompilerFlags.cmake
+++ b/Source/cmake/WebKitCompilerFlags.cmake
@@ -219,16 +219,3 @@ if (COMPILER_IS_GCC_OR_CLANG)
    DETERMINE_GCC_SYSTEM_INCLUDE_DIRS("c++" "${CMAKE_CXX_COMPILER}" "${CMAKE_CXX_FLAGS}" SYSTEM_INCLUDE_DIRS)
    set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES} ${SYSTEM_INCLUDE_DIRS})
 endif ()
-
-if (COMPILER_IS_GCC_OR_CLANG)
-    set(ATOMIC_TEST_SOURCE "
-        #include <atomic>
-        int main() { std::atomic<int64_t> i(0); i++; return 0; }
-    ")
-    check_cxx_source_compiles("${ATOMIC_TEST_SOURCE}" ATOMIC_INT64_IS_BUILTIN)
-    if (NOT ATOMIC_INT64_IS_BUILTIN)
-        set(CMAKE_REQUIRED_LIBRARIES atomic)
-        check_cxx_source_compiles("${ATOMIC_TEST_SOURCE}" ATOMIC_INT64_REQUIRES_LIBATOMIC)
-        unset(CMAKE_REQUIRED_LIBRARIES)
-    endif ()
-endif ()
-- 
2.11.0

